AWSTemplateFormatVersion: "2010-09-09"
Description: >
  AWS CloudFormation of creating a new VPC in an AWS region. Please put all files in a folder, called "cfn-nested". The VPC CIDR range is /16, and it has 3 public subnets and 3 private subnets by default.

Parameters:
  VpcCidrValue:
    Default: 10.1.0.0/16
    Description: The CIDR range of a VPC. Normally, it should be x.x.0.0/16.
    Type: String
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(0)\\.(0)/(16)"
    ConstraintDescription: must be a valid IP CIDR range that ends with /16 like x.x.0.0/16
  NewVpcName:
    Default: my-vpc
    Description: The name of the new VPC on AWS console
    Type: String
    MinLength: 1
    MaxLength: 32
  RegionCode:
    Default: apsoutheast2
    Description: The code name of the region
    Type: String
    MinLength: 1
    MaxLength: 16
  # Route table parameters
  RouteTableName:
    Description: The Route Table Name for the vpc.
    Default: route-table
    Type: String
    MaxLength: 32
  RouteTableNum:
    Description: The number of the public route table
    Default: 1
    Type: Number
    MinValue: 1
    MaxValue: 10
  SubnetName:
    Description: The prefix of the subnets
    Default: "subnet"
    Type: String
    MinLength: 1
    MaxLength: 32
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Default: 192.168.0.1/32 # To reuse this template, you can put your IP here
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SSHVpnLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances from office VPN
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Default: 172.16.0.0/14 # To reuse this template, you can put your VPN IP here
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  # Creation conditions
  CreateELBTargetGroups:
    Description: Whether to create default target groups for ELB.
    Type: String
    Default: "false"
    AllowedValues:
    - "false"
    - "true"
  # Uniserval parameters
  Level:
    Default: prod
    Description: The Level keyword of the security groups.
    Type: String
    AllowedValues:
      - prod
      - test
      - uat
  TagLevel:
    Default: Test
    Description: The Level tag of resourses.
    Type: String
  TheAuthor:
    Default: DevOps
    Description: The person's initail for the Author tag of the resources
    Type: String
    MinLength: 2
    MaxLength: 6
  # Nested template locations
  TemplateS3URL:
    Default: "cf-templates-xxx-ap-southeast-2"
    Description: The S3 bucket name for the S3 HTTP domain for all sub-templates
    Type: String
    MinLength: 1
  TemplateFolder:
    Default: "cfn-nested"
    Description: The S3 bucket path sub-templates
    Type: String
    MinLength: 1

Conditions:
  CondCreateTargetGroups: !Equals [!Ref CreateELBTargetGroups, "true"]

Resources:
  # Create the main VPC in an AWS region
  NewVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcCidrValue
      EnableDnsHostnames: "true"
      EnableDnsSupport: "true"
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - "vpc"
                - Ref: RegionCode
                - Ref: Level
                - Ref: NewVpcName
        - Key: Author
          Value:
            Ref: TheAuthor
        - Key: Level
          Value: !Ref TagLevel
        - Key: Region
          Value:
            Ref: AWS::Region
  # Create the Internet Gateway for the VPC
  newInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Author
          Value:
            Ref: TheAuthor
        - Key: Name
          Value:
            Ref: NewVpcName
  # Attach the Internet Gateway to the VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - NewVpc
      - newInternetGateway
    Properties:
      VpcId:
        Ref: NewVpc
      InternetGatewayId:
        Ref: newInternetGateway
  # Start to create child stacks by calling nested stacks
  # Create security groups for the VPC
  vpcSecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateS3URL}.amazonaws.com/${TemplateFolder}/security_groups_nested.yml"
      TimeoutInMinutes: 5
      Parameters:
        VpcId: !Ref NewVpc
        VpcName:
          Fn::Join:
            - "-"
            - - "vpc"
              - Ref: RegionCode
              - Ref: Level
              - Ref: NewVpcName
        Cidr: !GetAtt ["NewVpc", "CidrBlock"]
        Level: !Ref Level
        SSHLocation: !Ref SSHLocation
        SgGroupName:
          Fn::Sub:
            - ${VpcName}-base-sg
            - VpcName:
                Fn::Join:
                  - "-"
                  - - "vpc"
                    - Ref: RegionCode
                    - Ref: Level
                    - Ref: NewVpcName
        TagLevel: !Ref TagLevel
        TheAuthor: !Ref TheAuthor
    DependsOn: "NewVpc"
  # Create Route tables stack and other network resources  for the VPC
  mainVpcTargetGroupStack:
    Type: AWS::CloudFormation::Stack
    Condition: CondCreateTargetGroups
    Properties:
      TemplateURL: !Sub "https://${TemplateS3URL}.amazonaws.com/${TemplateFolder}/target_group_nested.yml"
      TimeoutInMinutes: 2
      Parameters:
        VpcId: !Ref NewVpc
        VpcName:
          Fn::Join:
            - "-"
            - - "vpc"
              - Ref: RegionCode
              - Ref: Level
              - Ref: NewVpcName
        # TemplateS3URL: !Ref TemplateS3URL
        # TemplateFolder: !Ref TemplateFolder
        Level: !Ref Level
        TheAuthor: !Ref TheAuthor
        TagLevel: !Ref TagLevel
    DependsOn: "NewVpc"
  # Create Route tables stack and other network resources  for the VPC
  mainVpcRouteTableStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      # - "mainVpcTargetGroupStack"
      - "vpcSecurityGroupsStack"
    Properties:
      TemplateURL: !Sub "https://${TemplateS3URL}.amazonaws.com/${TemplateFolder}/route_table_nested.yml"
      TimeoutInMinutes: 5
      Parameters:
        VpcId: !Ref NewVpc
        VpcCidr: !GetAtt ["NewVpc", "CidrBlock"]
        VpcName:
          Fn::Join:
            - "-"
            - - "vpc"
              - Ref: RegionCode
              - Ref: Level
              - Ref: NewVpcName
        InternetGatewayId: !Ref newInternetGateway
        RouteTableName: !Ref RouteTableName
        RouteTableNum: !Ref RouteTableNum
        SubnetName: !Ref SubnetName
        TemplateS3URL: !Ref TemplateS3URL
        TemplateFolder: !Ref TemplateFolder
        Level: !Ref Level
        TheAuthor: !Ref TheAuthor
        TagLevel: !Ref TagLevel

Outputs:
  VpcName:
    Description: The name of the VPC
    Value:
      Fn::Join:
        - "-"
        - - "vpc"
          - Ref: RegionCode
          - Ref: Level
          - Ref: NewVpcName
    Export:
      Name: VpcName
  VpcId:
    Description: The string form value of the VPC AWS resource id
    Value: !Ref NewVpc
    Export:
      Name:
        Fn::Join:
          - "-"
          - - "vpc"
            - Ref: RegionCode
            - Ref: Level
            - Ref: NewVpcName
            - "vpcId"
  VpcCidr:
    Description: The VPC CIDR range in a string
    Value: !Ref VpcCidrValue
    Export:
      Name:
        Fn::Join:
          - "-"
          - - "vpc"
            - Ref: RegionCode
            - Ref: Level
            - Ref: NewVpcName
            - "VpcCidr"
  InternetGatwayId:
    Description: The Id of the internet gateway
    Value: !Ref newInternetGateway
    Export:
      Name:
        Fn::Join:
          - "-"
          - - "vpc"
            - Ref: RegionCode
            - Ref: Level
            - Ref: NewVpcName
            - "igId"
  VpcRegion:
    Description: The AWS region name of where the new VPC is in
    Value: !Ref AWS::Region
  VpcStackName:
    Description: The CloudFormation stack name of the stack
    Value: !Ref AWS::StackName
  VpcRegionName:
    Description: The algorithem to return the code name of the region
    Value: !Ref RegionCode
    Export:
      Name: RegionCodeName
