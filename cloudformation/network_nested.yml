AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation of creating a VPC and its network infrastructures in an AWS region. This is the root template you should run."
Parameters:
  # Universal parameters
  TheAuthor:
    Default: DevOps
    Description: The person's initail for the Author tag of the resources
    Type: String
    MinLength: 2
    MaxLength: 6
  TagLevel:
    Default: Test
    Description: The Level tag of resourses.
    Type: String
    AllowedValues:
      - Production
      - Test
      - UAT
  Level:
    Default: prod
    Description: The Level keyword of the security groups.
    Type: String
    AllowedValues:
      - prod
      - test
      - uat
  # Nested template locations
  TemplateS3URL:
    Default: ""
    Description: The S3 HTTP domain for all sub-templates
    Type: String
  TemplateFolder:
    Default: "nested"
    Description: The S3 bucket path sub-templates
    Type: String
    MinLength: 1
  # Main VPC parameters
  VpcCidrValue:
    Default: 10.1.0.0/16
    Description: The CIDR range of a VPC. Normally, it should be x.x.0.0/16.
    Type: String
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(0)\\.(0)/(16)"
    ConstraintDescription: must be a valid IP CIDR range that ends with /16 like x.x.0.0/16
  NewVpcName:
    Default: rec-vpc
    Description: The name of the new VPC. It must be unique in an AWS Region
    Type: String
    MinLength: 1
    MaxLength: 32
    ConstraintDescription: must be a letter or a number or -
  RouteTableName:
    Description: The Route Table Name for the vpc.
    Default: route-table
    Type: String
    MaxLength: 32
  RouteTableNum:
    Description: The number of the public route table
    Default: 1
    Type: Number
    MinValue: 1
    MaxValue: 10
  SubnetName:
    Description: The prefix of the subnets
    Default: "subnet"
    Type: String
    MinLength: 1
    MaxLength: 32
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Default: 192.168.0.1/32 #Your IP address
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SSHVpnLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances from office VPN
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Default: 172.16.0.0/14 #Your office VPN IP address
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  # S3 bucket parameter
  CreateS3Bucket:
    Description: Whether create the dev S3 bucket for the region.
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    ConstraintDescription: must be Yes or No
  RegionBucketPrefix:
    Default: "rec"
    Description: The prefix of buckets.
    Type: String
    MinLength: 3
    MaxLength: 16
    ConstraintDescription: must be a string like xxx-xxx-xxx
  ExpireDays:
    Default: 15
    Description: The default expire date for bucket lifecycle management
    Type: Number
    MinValue: 0
    MaxValue: 180
  ArchiveExpireDays:
    Default: 180
    Description: The default expire date for bucket lifecycle management
    Type: Number
    MinValue: 90
    MaxValue: 732
  MoveToArchiveDays:
    Default: 30
    Description: The default archive days for bucket lifecycle management
    Type: Number
    MinValue: 30
    MaxValue: 90
  # EFS parameters
  EfsName:
    Description: The unique name of the EFS in a region. It must indicate the location of the mount point of the EFS.
    Type: String
    Default: efs
    MaxLength: 16
    ConstraintDescription: must be in the format like "efs0"
  Encryption:
    Type: String
    Description: Encrypt the EFS or not
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
  KmsKey:
    Description: The AWS KMS key ids for the encryption
    Type: String
    Default: " "
    MaxLength: 2048
    ConstraintDescription: must be an id of AWS KMS
  EfsMode:
    Description: The performance mode of the EFS
    Type: String
    Default: generalPurpose
    AllowedValues:
      - generalPurpose
      - maxIO
    ConstraintDescription: must be either generalPurpose or maxIO
  IoMode:
    Description: The Throughput Mode of the EFS
    Type: String
    Default: bursting
    AllowedValues:
      - bursting
      - provisioned
    ConstraintDescription: must be either bursting or provisioned
  ProvisionedIo:
    Description: The Provisioned Throughput in Mbps of the EFS. Only available when the IO mode is set to provisioned.
    Type: Number
    Default: 1
    MinValue: 0
    MaxValue: 1024
    ConstraintDescription: must be number between 1 - 1024
  Lifecycle:
    Description: The Lifecycle policy of the EFS. The EFS won't transfer files to IA storage when it is set to 0.
    Default: 7d
    Type: String
    AllowedValues:
      - disable
      - 7d
      - 14d
      - 30d
      - 60d
      - 90d
    ConstraintDescription: must be number defined in the lifecycle mapping
  # WAF parameters
  CreateWaf:
    Description: Whether create the dev S3 bucket for the region.
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    ConstraintDescription: must be Yes or No
  # VPC sub-template parameters
  CreateELBTargetGroups:
    Description: Whether to create default target groups for ELB in the VPC sub-template.
    Type: String
    Default: "false"
    AllowedValues:
    - "false"
    - "true"

Conditions:
  # Whether create the regional development S3 bucket yes/no
  CondCreateS3:
    Fn::Equals: [!Ref CreateS3Bucket, "Yes"]
  # Whether create the regional WAFs yes/no
  CondCreateWaf:
    Fn::Equals: [!Ref CreateWaf, "Yes"]

Resources:
  # Create the VPC stack in the AWS Region
  mainVpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateS3URL}.amazonaws.com/${TemplateFolder}/vpc_nested.yml"
      TimeoutInMinutes: 10
      Parameters:
        TheAuthor: !Ref TheAuthor
        VpcCidrValue: !Ref VpcCidrValue
        NewVpcName: !Ref NewVpcName
        SubnetName: !Ref SubnetName
        TemplateS3URL: !Ref TemplateS3URL
        TemplateFolder: !Ref TemplateFolder
        Level: !Ref Level
        TagLevel: !Ref TagLevel
        RegionCode: # Calculate region code name
          Fn::Join:
            - ""
            - !Split ["-", !Ref "AWS::Region"]
        CreateELBTargetGroups: !Ref CreateELBTargetGroups
  # Create the regional dev S3 bucket
  DevS3Bucket:
    Type: AWS::CloudFormation::Stack
    Condition: CondCreateS3
    Properties:
      TemplateURL: !Sub "https://${TemplateS3URL}.amazonaws.com/${TemplateFolder}/s3_buckets.yml"
      TimeoutInMinutes: 3
      Parameters:
        BucketPrefix: !Ref RegionBucketPrefix
        ExpireDays: !Ref ExpireDays
        ArchiveExpireDays: !Ref ArchiveExpireDays
        MoveToArchiveDays: !Ref MoveToArchiveDays
        TheAuthor: !Ref TheAuthor
        Level: !Ref Level
        TagLevel: !Ref TagLevel
        #RegionCode: !GetAtt [ "mainVpcStack", "Outputs.VpcRegionName" ]
        RegionCode: # Calculate region code name
          Fn::Join:
            - ""
            - !Split ["-", !Ref "AWS::Region"]
  # Create EFS
  Efs1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateS3URL}.amazonaws.com/${TemplateFolder}/efs.yml"
      TimeoutInMinutes: 5
      Parameters:
        TemplateS3URL: !Ref TemplateS3URL
        TemplateFolder: !Ref TemplateFolder
        TheAuthor: !Ref TheAuthor
        EfsName: !Ref EfsName
        Encryption: !Ref Encryption
        KmsKey: !Ref KmsKey
        EfsMode: !Ref EfsMode
        IoMode: !Ref IoMode
        ProvisionedIo: !Ref ProvisionedIo
        Lifecycle: !Ref Lifecycle
        VpcName: !GetAtt ["mainVpcStack", "Outputs.VpcName"]
        SubnetNamePrefix: !Ref SubnetName
        Level: !Ref Level
        TagLevel: !Ref TagLevel
  # Create WAF
  RegionalWaf:
    Type: AWS::CloudFormation::Stack
    Condition: CondCreateWaf
    Properties:
      TemplateURL: !Sub "https://${TemplateS3URL}.amazonaws.com/${TemplateFolder}/waf_stack.yml"
      TimeoutInMinutes: 5
      Parameters:
        TheAuthor: !Ref TheAuthor
        Level: !Ref Level
        TagLevel: !Ref TagLevel

Outputs:
  VpcId:
    Description: The string form value of the VPC AWS resource id
    Value:
      Fn::GetAtt: ["mainVpcStack", "Outputs.VpcId"]
    Export:
      Name: !Sub "${AWS::StackName}-vpcId"
  VpcName:
    Description: The VPC CIDR range in a string
    Value: !GetAtt ["mainVpcStack", "Outputs.VpcName"]
    Export:
      Name: !Sub "${AWS::StackName}-VpcName"
  VpcCidr:
    Description: The VPC CIDR range in a string
    Value: !Ref VpcCidrValue
    Export:
      Name: !Sub "${AWS::StackName}-VpcCidr"
  VpcRegion:
    Description: The AWS region name of where the new VPC is in
    Value: !Ref AWS::Region
