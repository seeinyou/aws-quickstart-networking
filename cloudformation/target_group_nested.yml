AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation template to create a target groups for ELB."
Parameters:
  VpcId:
    Description: The resource id of the vpc CloudFormation stack.
    Type: AWS::EC2::VPC::Id
    MinLength: 1
    MaxLength: 32
    ConstraintDescription: must be a VPC ID in the region
  VpcName:
    Description: The NewVpcName in the vpc CloudFormation stack.
    Type: String
    MinLength: 1
    MaxLength: 32
  HealthCheck:
    Description: Is the health check enabled.
    Default: "true"
    Type: String
    AllowedValues:
      - "true"
      - "false"
    ConstraintDescription: must be ture or false
  IngestInstId:
    Description: The EC2 instance ID of the ingest instance
    Default: " "
    Type: String
    ConstraintDescription: Must be a valid EC2 instance ID
  CMSInstId:
    Description: The EC2 instance ID of the CMS instance
    Default: " "
    Type: String
    ConstraintDescription: Must be a valid EC2 instance ID
  MqInstIds:
    Description: The EC2 instance IDs of the MQ instances
    Default: " "
    Type: CommaDelimitedList
    ConstraintDescription: Must be valid EC2 instance IDs, separated by comma.
  MqInstPort:
    Description: The target port of MQ EC2 instances
    Default: "8161"
    Type: Number
    AllowedValues:
      - 8161
      - 80
    ConstraintDescription: Must be valid TCP port
  MailWebInstId:
    Description: The EC2 instance ID of the Mail center web instance
    Default: " "
    Type: String
    ConstraintDescription: Must be a valid EC2 instance ID
  MailApiInstId:
    Description: The EC2 instance ID of the Mail center API instance
    Default: " "
    Type: String
    ConstraintDescription: Must be a valid EC2 instance ID
  # Uniserval parameters
  Level:
    Default: prod
    Description: The Level keyword of the security groups.
    Type: String
    AllowedValues:
      - prod
      - test
      - uat
  TagLevel:
    Default: Test
    Description: The Level tag of resourses.
    Type: String
    AllowedValues:
      - Production
      - Test
      - UAT
  TheAuthor:
    Default: DevOps
    Description: The person's initail for the Author tag of the resources
    Type: String
    MinLength: 2
    MaxLength: 6

# Data mappings
Mappings:
  ElbSchema:
    Schema:
      Internet: "internet-facing"
      Internal: "internal"
  ElbSecurityPolicy:
    AppDefault:
      Policy: "ELBSecurityPolicy-2016-08"
    AppNormal:
      Policy: "TLS-1-2-2017-01"
    AppHigh:
      Policy: "TLS-1-2-Ext-2018-06"

Conditions:
  # Whether add an ingest ec2 instance to the target group
  CondTargetIngest: !Not [!Equals [!Ref IngestInstId, ""]]
  CondTargetMq: !Not [!Equals [!Select [0, !Ref MqInstIds], ""]]
  CondTargetCMS: !Not [!Equals [!Ref CMSInstId, ""]]
  # Whether add an mail center web ec2 instance to the target group
  CondTargetMailWeb: !Not [!Equals [!Ref MailWebInstId, ""]]
  # Whether add an mail center api ec2 instance to the target group
  CondTargetMailApi: !Not [!Equals [!Ref MailApiInstId, ""]]

Resources:
  # Create a target group for webfront EC2 instances
  TargetWeb1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: !Ref HealthCheck # It must be true for TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/health.html"
      #HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Name: !Sub "${VpcName}-tg-web-1"
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
        - Key: slow_start.duration_seconds
          Value: 30
      # Targets:
      #   - TargetDescription
      TargetType: instance
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Tags:
        - Key: Author
          Value: !Ref TheAuthor
        - Key: Level
          Value: !Ref TagLevel
  # Create a target group for CMS webfront EC2 instances
  TargetCms1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: !Ref HealthCheck # It must be true for TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/health.html"
      #HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Name: !Sub "${VpcName}-tg-cms-1"
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
        - Key: slow_start.duration_seconds
          Value: 30
      Targets: !If
        - CondTargetCMS
        - - Id: !Ref CMSInstId
            Port: 80
        - Ref: "AWS::NoValue"
      TargetType: instance
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Tags:
        - Key: Author
          Value: !Ref TheAuthor
        - Key: Level
          Value: !Ref TagLevel
  # Create a target group for Bulk ingest tool webfront EC2 instances
  TargetBulkTool:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: !Ref HealthCheck # It must be true for TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/health.html"
      #HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Name: !Sub "${VpcName}-tg-in-1"
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
        - Key: slow_start.duration_seconds
          Value: 30
      Targets: !If
        - CondTargetIngest
        - - Id: !Ref IngestInstId
            Port: 80
        - Ref: "AWS::NoValue"
      TargetType: instance
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Tags:
        - Key: Author
          Value: !Ref TheAuthor
        - Key: Level
          Value: !Ref TagLevel
  # Create a target group for MQ EC2 instances
  TargetQueue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: !Ref HealthCheck # It must be true for TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckPort: 8161
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Name: !Sub "${VpcName}-tg-mq-1"
      Port: 8161
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
        - Key: slow_start.duration_seconds
          Value: 30
      Targets: !If
        - CondTargetMq
        - - Id: !Select [0, !Ref MqInstIds]
            Port: !Ref MqInstPort
        - Ref: "AWS::NoValue"
      TargetType: instance
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Tags:
        - Key: Author
          Value: !Ref TheAuthor
        - Key: Level
          Value: !Ref TagLevel
  # Create a target group for MQ EC2 instances
  TargetConsumer1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: !Ref HealthCheck # It must be true for TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckPort: 8161
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Name: !Sub "${VpcName}-tg-mqc-1"
      Port: 8161
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
        - Key: slow_start.duration_seconds
          Value: 30
      # Targets:
      #   - TargetDescription
      TargetType: instance
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Tags:
        - Key: Author
          Value: !Ref TheAuthor
        - Key: Level
          Value: !Ref TagLevel
  # Create a target group for Mail Centre Webfront EC2 instances
  TargetMailCenterWeb:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: !Ref HealthCheck # It must be true for TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Name: !Sub "${VpcName}-tg-ml-1"
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
        - Key: slow_start.duration_seconds
          Value: 30
      Targets: !If
        - CondTargetMailWeb
        - - Id: !Ref MailWebInstId
            Port: 80
        - Ref: "AWS::NoValue"
      TargetType: instance
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Tags:
        - Key: Author
          Value: !Ref TheAuthor
        - Key: Level
          Value: !Ref TagLevel
  # Create a target group for Mail Centre API EC2 instances
  TargetMailCenterApi:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: !Ref HealthCheck # It must be true for TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Name: !Sub "${VpcName}-tg-api-1"
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
        - Key: slow_start.duration_seconds
          Value: 30
      Targets: !If
        - CondTargetMailApi
        - - Id: !Ref MailApiInstId
            Port: 80
        - Ref: "AWS::NoValue"
          # - # Use mail center web
          #   Id: !Ref MailWebInstId
          #   Port: 80
      TargetType: instance
      UnhealthyThresholdCount: 4
      VpcId: !Ref VpcId
      Tags:
        - Key: Author
          Value: !Ref TheAuthor
        - Key: Level
          Value: !Ref TagLevel
Outputs:
  TargetWeb1Name:
    Description: The web target group name.
    Value: !GetAtt TargetWeb1.TargetGroupName
  TargetCms1Name:
    Description: The CMS target group name.
    Value: !GetAtt TargetCms1.TargetGroupName
  TargetBulkToolName:
    Description: The Bulk-ingest tool target group name.
    Value: !GetAtt TargetBulkTool.TargetGroupName
  TargetQueueName:
    Description: The mq target group name.
    Value: !GetAtt TargetQueue.TargetGroupName
  TargetConsumer1Name:
    Description: The mq-consumer target group name.
    Value: !GetAtt TargetConsumer1.TargetGroupName
  TargetMailWebName:
    Description: The Mail Center Web target group name.
    Value: !GetAtt TargetMailCenterWeb.TargetGroupName
  TargetMailApi1Name:
    Description: The Mail Center API target group name.
    Value: !GetAtt TargetMailCenterApi.TargetGroupName
