AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation of creating an Elastic File System Mount Target in each subnet.'
Parameters:
  EfsId:
    Type: String
    Description: The system ID of the EFS that you want to create the mount targets
    MinLength: 8
    ConstraintDescription: must be a valid EFS system id in the Region
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The private subnets associate to the subnet group in the VPC.
    ConstraintDescription: must be at most one subnet in each AZ
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: The security groups associate to the EFS mount targets.
    ConstraintDescription: must be at most 5 security group ids in the VPC
  EfsName:
    Description: The export name of the EFS, which the target will associated to.
    Type: String
    MaxLength: 8
    ConstraintDescription: must be alphablet or number
  VpcName:
    Description: The NewVpcName in the vpc CloudFormation stack.
    Type: String
    MinLength: 1
    MaxLength: 32
  Level:
    Default: test
    Description: The Level keyword of the security groups.
    Type: String
    AllowedValues:
    - prod
    - test
    - uat
  TagLevel:
    Default: Test
    Description: The Level tag of resourses.
    Type: String
    AllowedValues:
    - Production
    - Test
    - UAT
  TheAuthor:
    Default: DevOps
    Description: The person's initail for the Author tag of the resources 
    Type: String
    MinLength: 2
    MaxLength: 6

# Template Conditions
#Conditions:
  # # Whether create a mount target in Subnet B
  # CondCreateInSubnetB:
  #   !Select [ 1, !Ref Subnets ]
  # # Whether create a mount target in Subnet C
  # CondCreateInSubnetC:
  #   !Select [ 2, !Ref Subnets ]
# Resources for Creation
Resources:
  # Create the EFS mount target in subnet a
  EfsTargetInSubnet1:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref EfsId
      SecurityGroups:
        Ref: SecurityGroups
      SubnetId: !Select [ 0, !Ref Subnets ]
      # IpAddress: String # Don't need to use this
  # Create the EFS mount target in subnet b
  EfsTargetInSubnet2:
    Type: AWS::EFS::MountTarget
    #Condition: CondCreateInSubnetB
    Properties: 
      FileSystemId: !Ref EfsId
      SecurityGroups:
        Ref: SecurityGroups
      SubnetId: !Select [ 1, !Ref Subnets ]
      # IpAddress: String # Don't need to use this
  # Create the EFS mount target in subnet c
  EfsTargetInSubnet3:
    Type: AWS::EFS::MountTarget
    #Condition: CondCreateInSubnetC
    Properties: 
      FileSystemId: !Ref EfsId
      SecurityGroups:
        Ref: SecurityGroups
      SubnetId: !Select [ 2, !Ref Subnets ]
      # IpAddress: String # Don't need to use this

Outputs:
  EfsTargetInSubnet1:
    Description: The resource ID of the EFS mount target
    Value: !Ref EfsTargetInSubnet1
    Export:
      Name:
        Fn::Sub:
          - ${VpcName}-${SubnetId}-e${EfsName}-tg
          - VpcName: !Ref VpcName
            SubnetId: !Select [ 0, !Ref Subnets ]
            EfsName: !Ref EfsName
  EfsTargetInSubnet1Ip:
    Description: The internal IPv4 address of the EFS mount target
    Value: !GetAtt EfsTargetInSubnet1.IpAddress
    Export:
      Name: 
        Fn::Sub:
          - ${VpcName}-${SubnetId}-e${EfsName}-tg-ip
          - VpcName: !Ref VpcName
            SubnetId: !Select [ 0, !Ref Subnets ]
            EfsName: !Ref EfsName
  EfsTargetInSubnet2:
    Description: The resource ID of the EFS mount target
    Value: !Ref EfsTargetInSubnet2
    Export:
      Name: !Sub
        - ${VpcName}-${SubnetId}-e${EfsName}-tg
        - VpcName: !Ref VpcName
          SubnetId: !Select [ 1, !Ref Subnets ]
          EfsName: !Ref EfsName
  EfsTargetInSubnet2Ip:
    Description: The internal IPv4 address of the EFS mount target
    Value: !GetAtt EfsTargetInSubnet2.IpAddress
    Export:
      Name: 
        Fn::Sub:
          - ${VpcName}-${SubnetId}-e${EfsName}-tg-ip
          - VpcName: !Ref VpcName
            SubnetId: !Select [ 1, !Ref Subnets ]
            EfsName: !Ref EfsName
  EfsTargetInSubnet3:
    Description: The resource ID of the EFS mount target
    Value: !Ref EfsTargetInSubnet3
    Export:
      Name: !Sub
        - ${VpcName}-${SubnetId}-e${EfsName}-tg
        - VpcName: !Ref VpcName
          SubnetId: !Select [ 2, !Ref Subnets ]
          EfsName: !Ref EfsName
  EfsTargetInSubnet3Ip:
    Description: The internal IPv4 address of the EFS mount target
    Value: !GetAtt EfsTargetInSubnet3.IpAddress
    Export:
      Name: !Sub
        - ${VpcName}-${SubnetId}-e${EfsName}-tg-ip
        - VpcName: !Ref VpcName
          SubnetId: !Select [ 2, !Ref Subnets ]
          EfsName: !Ref EfsName
